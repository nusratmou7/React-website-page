{"ast":null,"code":"var _jsxFileName = \"E:\\\\react_test\\\\game\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  let now = new Date().toLocaleTimeString();\n  const [ctime, stime] = useState(now);\n\n  const utime = () => {\n    now = new Date().toLocaleTimeString();\n    stime(now);\n  };\n\n  setInterval(utime, 1000);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" \", ctime]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 1\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"I2gxleA+CG2gXBG63E+TEW+tRCo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/react_test/game/src/App.jsx"],"names":["React","useState","App","now","Date","toLocaleTimeString","ctime","stime","utime","setInterval"],"mappings":";;;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAIA,MAAMC,GAAG,GAAC,MAAI;AAAA;;AAGX,MAAIC,GAAG,GAAG,IAAIC,IAAJ,GAAWC,kBAAX,EAAV;AAEH,QAAK,CAACC,KAAD,EAAOC,KAAP,IAAcN,QAAQ,CAACE,GAAD,CAA3B;;AACA,QAAMK,KAAK,GAAC,MAAI;AAChBL,IAAAA,GAAG,GAAG,IAAIC,IAAJ,GAAWC,kBAAX,EAAN;AACIE,IAAAA,KAAK,CAACJ,GAAD,CAAL;AACH,GAHD;;AAIAM,EAAAA,WAAW,CAACD,KAAD,EAAO,IAAP,CAAX;AAEG,sBACG;AAAA,2BAEN;AAAA,sBAAOF,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAFM,mBADH;AAQC,CApBJ;;GAAMJ,G;;KAAAA,G;AAqBN,eAAeA,GAAf","sourcesContent":["\r\n\r\nimport React, { useState } from 'react';\r\n\r\n\r\n\r\nconst App=()=>{\r\n   \r\n\r\n   let now = new Date().toLocaleTimeString()\r\n\r\nconst[ctime,stime]=useState(now)\r\nconst utime=()=>{\r\nnow = new Date().toLocaleTimeString()\r\n    stime(now)\r\n}\r\nsetInterval(utime,1000)\r\n\r\n   return ( \r\n      <>\r\n\r\n<h1 > {ctime}</h1>\r\n  \r\n           </> \r\n)\r\n   \r\n   }\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}